* Commentary
Bitcoin donations gratefully accepted: 1ArFina3Mi8UDghjarGqATeBgXRDWrsmzo

zsh function/widget allowing you to quickly browse, perform actions, and select output from stored commands using fzf.
Allows multiple commands in the same fzf session, e.g. browse parameters, zstyles, options, etc. in the same session.
Requires fzf: https://github.com/junegunn/fzf and a checksum command such as md5sum

* Overview

When used as a normal zsh function you can either pipe input into STDIN, or supply it with a string argument containing
the command whose output will be piped to fzf. Alternatively you can use the -a arg to specify a predefined input command
that has been stored in the src-cmd zstyle (see PREDEFINED COMMANDS section below).
You can also use the -z or -f options to specify a source file to load which contains zstyle statements for the ':zfzf:*'
context. For example you may have different sets of predefined input commands (which can be accessed by pressing the
alt-0-9/left/right keys) to use in different circumstances (see DYNAMICALLY CHANGING OPTIONS section below).
The allowed zstyles are listed below and allow you to customize the behaviour of zfzf.
To show function usage use the -h option.
When used as a widget zfzf will prompt the user for a command unless a prefix arg is used, and then pipe the output from the
user defined or predefined command to fzf. At the input command prompt you have full access to normal editing keybindings,
and a history of previous zfzf commands. The command will be stored in a history list, and may contain a trailing comment
to make it easier to find at a later time. If the command contains a # (e.g. as part of a globbing pattern), then you should
also add a trailing comment to prevent the first hash being mistaked for a comment when the line is checked by zfzf.
If prefix arg <N> is used, then input command is obtained from: zstyle ':zfzf:<N>' src-cmd

Also wrapper widgets named zfzf1, zfzf2,...,zfzf10 are defined which invoke zfzf with the -a arg set to 1,2,...,10,
and the -f arg set to 1 or the value of the numeric prefix arg if used. If you bind these wrapper widget to keys
(e.g. the fkeys) then you have quick access to different sets of input commands (e.g. you could have one for zsh
related stuff such as parameters & options, another for package management commands, etc).

* History Files

The first time it is run the existing history is searched for commands that pipe output to fzf, and these are
placed in a separate history file for zfzf (default is ~/.zfzf/prompt_history).
Separate files are used for storing fzf query histories of different source commands. You can navigate the query
history by pressing ctrl-n/p.
By default the query history files are stored in ~/.zfzf/ with names being the checksums of the corresponding input
commands. You can specify a different directory and different filenames with the fzf-histdir and fzf-histfile zstyles (see below).
This can be useful if you want several different command lines to share the same history file.

* Predefined Commands & Cached Output

You can specify predefined commands which can be accessed by either using a numeric prefix key when you start zfzf,
or by pressing alt-left/right or alt-1..9 at the fzf prompt after output has already been listed.
In the latter case the current listing will switch to the output of the command associated with the numeric key pressed,
and you can press alt-0 to switch back to the initial output. See src-cmd zstyle below.
By default when switching output the command will be executed in a clean environment which may not produce the desired output.
Also some commands may be slow to execute. In these cases you may prefer to cache the output which can be done using the
cache-timeout zstyle to set a timeout for the cache file (see below). This cache file is only created for the initial input,
which is created in the invoking shell environment. You can cache the current input listing (created in a clean environment)
by pressing alt-C, or delete the cache by pressing alt-R. By default the cache files are stored in tmpdir (see below),
which may be wiped on reboot. You can specify a different directory for the cache file of a command using the cachedir option
(note however that this may be slower to read/write than tmpdir).
To ensure that the preview environment also mimics the calling environment you could source files containing the output
of "typeset -p" & "typeset -f". These files can be created automatically in the same directory as the other cache files
by setting the cache-auxiliary to a timeout value.
These features will only work if you have a checksum command such as md5sum installed on your system.

* Dynamically Changing Options & Predefined Command Sets

The srcs-file zstyle allows you to declare files containing zstyle commands which will be loaded on startup if the -a
option is used, or one of the wrapper widgets (zfzf1,...,zfzf10) is invoked, or after startup when an fkey is pressed.
This allows you to change the predefined input commands that are invoked by the alt-1 to alt-9 keys, their associated
preview commands, and other options (e.g. keybindings). The src-file zstyle should be a path to a file containing
only comment lines & zstyle commands with context strings matching ':zfzf:*'.

* Preview window, header, help file, output transformation & other zstyles

To specify what should appear in the fzf preview window for a given command use the preview zstyle (see below).
You can change the preview command for the current listing by entering a command at the prompt and pressing alt-P,
this is useful when zfzf is used in a pipeline (see below), or for input commands with no corresponding preview zstyle.
When the alt-v key is pressed the output of the preview command will be piped to ${PAGER}, unless this keybinding
is overridden using other-opts. The other-opts zstyle can be used to specify other options for fzf such as extra
keybindings, or to override default fzf options.
By default a header line showing the default keybindings will be displayed, along with the contents of the $FZF_HEADER
variable. You can add extra text (e.g. to display info on extra keybindings defined in other-opts) using the header zstyle
which will display an extra header line containing the extra text.
You can associate a text file with each input command using the helpfile zstyle. Then when the alt-h key is pressed the
contents of that file will be displayed by $PAGER. Alternatively you can specify a command to be run to produce the help text.
You can also specify how selected output lines should be transformed before being placed on the command line when
the enter key is pressed, e.g. parameter names from typeset output are wrapped in ${}. See the query-pat & replace-str
zstyles below. Note that this will affect any output that is printed to the command line from actions you may have
bound to keys using the other-opts zstyle (see below).

* Input from stdin (using zfzf in a pipeline)

zfzf can also be used as a non-widget function and take input from stdin. To specify default options for stdin you should
use the :zfzf:stdin context with zstyle. However, since there is a wide variety of potential inputs the preview zstyle
may not be of much use in this case. You can use the alt-P keybinding to specify a preview command (see above) for each
different input listing.


